/*
KMP
*/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;
char txt[100100] , pat[1100];
int lps[1100];

void computeLPSArray(int M)
{
    int len = 0;
    lps[0] = 0;
    int i = 1;
    while (i < M)
    {
        if (pat[i] == pat[len])
        {
            len++;
            lps[i] = len;
            i++;
        }
        else
        {
            if (len != 0)
            {
                len = lps[len-1];
            }
            else
            {
                lps[i] = 0;
                i++;
            }
        }
    }
}
bool KMPSearch()
{
    int M = strlen(pat);
    int N = strlen(txt);
    computeLPSArray(M);
    int i = 0;
    int j  = 0;
    while (i < N)
    {
        if (pat[j] == txt[i])
        {
            j++;
            i++;
        }

        if (j == M)
        {
            return 1;
        }

        else if (i < N && pat[j] != txt[i])
        {
            if (j != 0)
                j = lps[j-1];
            else
                i = i+1;
        }
    }
    return 0;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        scanf("%s" , txt);
        int q;
        scanf("%d" , &q);
        while(q--)
        {
            scanf("%s" , pat);
            if(KMPSearch()) printf("y\n");
            else printf("n\n");
        }
    }
    return 0;
}
