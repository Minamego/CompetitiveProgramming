/*
KMP
*/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
char s[1000100];
int n;
vector<int> KMP()
{
  vector<int> pi;
  pi.push_back(0);
  for(int i = 1 , j = 0 ; i<n  ; ++i)
	{
	   while(j && s[i] != s[j])
        j = pi[j-1];
	   if(s[i] == s[j]) ++j;
        pi.push_back(j);
    }
  return pi;
}
int main()
{
    int t = 1;
    while(1)
    {
        map<int,int>mp;
        scanf("%d%s" , &n , s);
        if(n==0) break;
        vector<int>kmp = KMP();
        printf("Test case #%d\n" , t++);
        for(int i = 2 ; i<= n ; ++i)
        {
            if(kmp[i-1] && (i%(i-kmp[i-1]))==0) printf("%d %d\n" , i , i/(i-kmp[i-1]));
        }
        printf("\n");
    }
    return 0;
}
